// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// models/templates/service/webhook.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5b\x6d\x73\xdb\xb8\xf1\x7f\xef\x4f\x81\xe1\xe4\xc5\xff\x7f\x23\x2b\x76\x32\x97\xb6\x9a\xb6\x33\x8e\xec\x24\x6a\x6c\xc7\x95\x9c\xdc\xb4\x19\xcf\x0d\x4d\x41\x12\x2b\x8a\xe0\x11\xa4\x2f\x8a\x47\xdf\xbd\x8b\x27\xe2\x91\xa2\x2c\xdb\x99\x3e\xdd\xe5\x6c\x62\x01\x2c\x76\x17\xbb\xbf\xc5\x6e\xee\xef\xd1\x14\xcf\xd2\x1c\xa3\x28\x2e\x8a\x08\x6d\x36\x07\x08\xdd\xc3\xbf\x08\x45\x27\xbf\x4c\xae\xf1\xaa\xc8\xe2\x0a\xbf\x23\xe5\x2a\xae\xbe\xe0\x92\xa6\x24\x8f\xd0\x00\x45\xaf\x8e\x8e\x8f\x0e\x8f\xfe\x04\xff\x44\x3d\x41\x3e\x24\xf9\x34\xad\x60\x9c\x46\x03\xb9\x04\x2c\x75\x8f\x2a\xb9\x06\x8a\x6e\xe3\x2c\xce\x13\x5c\x1e\x26\x9a\x14\xf5\xc5\x9e\x1e\x71\x51\x92\x04\x53\xba\x13\x6d\x89\xe7\x29\xad\xca\x75\x1b\x71\x74\x55\xa6\x77\x40\xc9\x18\x43\xd1\xbb\x7c\x30\x38\xfb\xad\x8e\x33\xc6\xe8\x57\xf6\x65\x8c\x67\xf0\x63\x43\x85\x36\x3d\x14\xfd\x03\xc3\x1a\x37\x48\x2c\xb1\x91\x67\xbc\x8a\xcb\x78\x85\x2b\x90\x03\x13\xc2\xf6\x43\x16\x8c\x76\x87\x03\x5a\x74\x8a\xe1\x61\x56\x53\xd8\xc6\x90\x24\x7c\xbc\x5e\x17\x98\x0b\x7f\x52\x95\x69\x3e\x97\x82\xe7\x43\xa7\x78\x16\xd7\x59\xc5\x47\xed\xef\x34\x29\xd3\xa2\x52\x6a\x8b\xe4\xd0\xa6\xd7\xec\x54\xd4\x81\x5d\x80\xf4\xb2\x5e\xdd\x02\x07\x81\x4d\xb8\xfa\x8f\xda\xb6\x81\xd1\xe1\xd5\x67\x44\x17\x71\x89\x29\x22\x33\x84\xe3\x64\x81\xe4\x69\xfd\xfd\xcf\xf2\xbb\xb4\x24\xf9\x0a\xe7\x55\x98\x8f\xf6\xc3\x6e\x39\x6b\xf0\xa8\x1f\xf1\xfa\xb9\xb7\x30\x0c\x6d\xb7\x6d\x6c\xb9\x95\x98\x99\x46\x9a\x83\xea\xf3\x38\x43\x19\x89\xa7\x48\x19\x14\x85\xef\x20\x46\xbe\x3e\xa2\xf5\x6d\x8e\x2b\xda\xc2\xf2\x25\x31\x07\x4e\xb2\x8c\xfc\x8e\xa7\x5f\xe2\xac\xc6\xc2\xe4\xb9\x71\xf7\x38\x1d\xba\xf1\xce\x30\xc6\x19\x8e\x69\xe8\x0c\x4f\x6d\x7b\x63\x5c\x10\x9a\x56\xa4\x0c\xe9\xe5\x71\x9b\x4d\x48\x5d\x26\x18\x25\x64\x8a\x51\xa9\xb7\xf1\x58\x98\x48\x41\x86\xf7\x3f\x07\xb7\xf2\x67\xf0\x83\xe0\x30\x86\xaf\x06\x03\x41\x3c\x18\x8c\xa6\x7f\xdd\x87\xa7\x2f\x57\x43\xa5\x38\x34\x23\x25\xaa\x16\x29\x45\xcc\xed\xb6\x71\xd5\x6e\x4d\xcf\xc3\x9c\x63\x5d\x1d\x4c\xaa\x70\x60\x71\xe7\x58\xf4\xff\x8d\xcf\xfe\xfe\x79\x34\x3e\x3b\xfd\x7f\x74\x1e\xaf\x6e\xa7\x31\x1a\x82\x63\x23\xab\x6b\x52\xa4\x09\xfa\x10\xe7\xd3\x0c\x97\x48\x5a\x1c\x52\x2b\x1a\x6c\x5e\xa4\xf9\x39\xce\xe7\xd5\x82\x33\x79\x6c\x0e\x39\xd7\xca\xe7\xef\x6a\xd8\x22\x39\x2d\x34\xa0\x61\x12\xdb\x57\x60\x41\x01\x59\x11\x63\x8c\x29\xb7\x44\xd3\xc2\x22\x43\x06\x63\x92\xb5\x78\x0b\xce\xe4\xe8\xe4\x62\x30\xe0\x34\x06\x27\x57\x25\x29\x70\x59\xa5\xd8\x36\x5b\x76\xd5\x29\xad\x57\x98\xd1\x5f\x91\x2c\x4d\xd6\xa7\x24\xa9\x3d\xcf\xea\x28\x8f\x85\xf2\x57\x87\x10\xcd\x8f\xff\x60\x6c\x22\xcc\xb0\x02\x6b\x90\xf3\xbf\x5a\x43\xc8\x59\x8f\x93\x9f\xcd\x66\x38\xe1\x0e\x88\xbb\x1c\x67\x35\xc9\x7a\x9a\x27\x69\x11\x67\x22\x14\x4f\x70\x79\x97\x26\x58\x38\xa5\x8c\x1b\x48\x3f\x5e\xc5\xdf\x49\x1e\xff\x4e\xfb\x09\x59\xf1\x10\x1c\x58\xe7\x24\x91\x16\x06\xf3\x68\x45\x07\xfa\xe0\xda\xa3\xa9\xff\x6d\xac\xdf\xcd\x51\x6b\x65\x08\xee\x60\x65\xc0\xfc\xcb\xc8\xfe\xcc\x24\x29\x64\x6d\xcb\xc0\x95\x80\xa0\x5c\x5f\x02\x42\xe0\x32\x98\xae\xd2\x9c\xc1\x92\x18\x3c\x8f\x27\x8b\xa8\x43\x41\x9c\x66\x17\x25\x71\x42\x4b\x51\x4c\xb0\x9e\x2a\x0c\x91\x45\x3f\xb1\x5f\x95\x61\x8a\x0f\x68\xd3\x21\x36\xf3\x37\x4d\xb9\xf1\xe1\x84\x36\xed\x2d\x66\x2d\x7c\xc1\x60\xf0\xae\xce\x05\x57\x3b\x59\xf7\x10\x9c\xb9\x6f\xc9\x93\xd7\x6f\xeb\x64\x89\x2b\x0d\xee\xfe\x46\x52\x69\x1a\x87\x70\x52\xf8\x0f\xc0\xc2\x3b\xf2\x0d\x7e\xd6\x58\x8f\xb3\x31\x06\xdc\xc8\x6e\x33\x1c\xde\xb7\x33\x58\x58\x02\x06\x77\x55\xb1\x68\x29\x9c\xd6\x4b\x6b\xd9\x06\x22\x33\x08\xf9\x72\xc6\x61\x33\xfc\xde\xff\x9e\x16\x91\xd8\xa4\xd5\xfc\xa4\x33\x64\xab\xc8\x9b\x80\xbf\x09\x1c\x60\xdb\xe3\x05\x5e\x41\x24\x9b\xa4\xdf\xb9\x38\x8f\x5f\xfd\xd1\x1e\x56\x0e\x45\x30\xfd\x1e\x57\x27\x95\xb0\x0a\xcf\xeb\x30\x9b\x28\x73\xef\x86\x45\xe3\x3a\xaf\x52\x61\xc3\x39\x48\xfc\x5f\xd4\xde\xe0\x1a\xc6\x48\xcd\x6d\xeb\xf5\x51\xd4\x6e\x0a\x61\x54\x5c\x36\xfe\xb0\x13\x18\x3f\x80\x94\x0a\x3f\xb2\x4b\x8a\xe0\xae\x1a\x22\xa6\x38\xa9\xcb\xb4\x5a\x47\x2d\x8b\xd1\x4a\xa4\x09\xb6\xab\xff\x54\x57\x45\x5d\x75\x67\x3f\x44\xd2\x75\x9e\xaa\x93\xb0\x39\x94\x4d\xd9\xa0\x08\x5c\x55\x10\x19\x1d\x70\xc3\x71\xa0\xb0\x10\x69\xb4\x0d\x9d\x56\xe2\x81\xfa\x73\x73\x00\x3b\xe2\x7c\xca\xd7\x35\xb2\xc5\x50\x7a\x26\x92\xc7\x7b\x54\xc6\xf9\x1c\xa3\x17\x4b\x34\xf8\x0b\xea\x9f\xe5\xc0\x20\xf3\x89\x54\x1d\x22\x7a\x0b\x82\x58\x02\x5d\x5d\xc0\x45\x67\x74\x9b\x8d\x0e\x04\x7e\x82\xc6\xee\x5b\xd4\x98\xa9\x66\x67\x3b\x63\x2a\xad\x72\x98\xc2\x9c\xa9\x86\x15\xcd\x05\xee\x33\x26\x61\x40\xdc\x2f\x33\x5c\xb7\x64\x44\x56\x3e\xf4\xf3\x1b\xf3\xbb\x85\x81\x2e\xde\xb2\x2c\x68\x7c\x72\x81\x2a\x02\x58\x94\xd9\x2a\x8e\x2c\xcb\x09\x70\x01\x6b\xa4\x25\x9e\x0e\x49\x6d\x05\x07\x8d\x61\xda\x98\xb1\x61\x92\x87\x5a\xae\x17\x18\xe5\x7c\x2a\x63\x2a\xcd\xc1\x94\xe1\xb6\x73\x27\xc5\x93\xb5\x0a\xc6\xa5\x08\x19\xbb\x60\x68\x80\xa2\xc1\x33\xa1\x25\xc6\x05\x2a\xeb\x3c\x07\x4b\x41\x24\x47\x6b\xb8\x45\x28\x91\x69\xaa\x3e\xcd\xae\xea\x69\x2c\x96\x6b\x22\xfa\x08\x83\x34\xd5\x96\x1a\xb0\x52\x45\x22\xcc\x92\xed\x15\x9d\x93\xf9\xfb\x92\xd4\xc5\xb6\x69\x0d\x8d\x9a\xb7\x9d\x2f\xc3\x3d\xb4\x70\x66\x05\x32\x39\x0a\xe8\xbb\x82\xdc\x6d\xa5\xde\x42\x82\x31\x2c\x9a\x40\x4a\xdc\x68\xf4\x58\x5f\xb1\x96\xb3\xd8\x11\x93\xcc\x29\xff\x53\x10\xed\x72\x14\xed\x14\xd5\x1d\x78\xb1\x8a\xf3\x74\x86\x69\x65\x5c\x02\xf8\x9c\xce\x50\xff\x43\x0c\xd9\x06\x9f\xa7\x2f\x6a\xdb\xad\x09\x5b\xec\xd9\x70\x72\x1d\xd3\xe5\x29\xe3\x22\xad\x02\x89\x41\x01\xbc\xd2\x4f\x3c\x86\x5a\x30\xa1\xd7\xe0\x40\x1e\x96\x6e\x02\x10\x5f\x90\x33\xcc\xee\xee\x61\x10\x1b\x68\xe9\xb8\x7f\xb4\x1b\xa4\x90\x1b\x5f\x93\x25\xce\x3b\xa3\x66\x6b\xc4\x94\x90\xaf\x05\x7e\x38\xa0\x03\xb0\x5a\xb2\xe4\x33\x38\x48\x60\x6a\x69\x64\x18\xf9\x40\xc4\x4c\xc7\x9b\x85\xd4\x37\x87\xd4\x79\x4b\x69\xc8\xcd\xef\xce\x94\x06\xe2\xa8\x5b\x86\xd7\x2e\x09\x93\xb8\x7c\x2a\x33\x83\x0f\x66\x8e\xfd\xd7\x0a\x06\x45\xd8\xd9\x0a\x0b\xc3\xf6\x62\x78\xfd\x16\x43\x31\xf8\x10\x86\x0a\xf3\xc1\x54\xdf\xca\x58\xaa\x2d\x52\xef\xd3\x18\x79\x5f\x51\x29\xa8\xcb\x37\x36\x84\xdd\xb3\x57\x97\x57\xc9\x58\xcd\xd2\x7d\xc0\x6c\xb8\xbd\xea\xef\x1d\x96\xab\x4e\xfb\x1f\x61\xb2\xc6\x03\x63\xa3\x7b\xf5\xcd\x21\x75\x43\x51\x43\xdf\x15\xb6\x7e\xe4\x2d\xf1\x5d\xcf\x36\x36\x7d\x3f\xe2\x5e\xba\x06\x45\x37\x18\x49\x6b\xdc\xa1\x3d\x27\xf1\x54\x99\x5a\x20\x4b\xd4\x4e\xb4\x7f\x45\xca\xea\x22\x2e\x0a\x06\xb6\x5c\xd3\x45\xbe\x60\x06\x8e\x60\x1e\x64\xdc\x01\xb1\x89\x0f\xfd\x21\xc9\xab\x18\x22\x45\x19\x16\x65\xf8\x2e\x20\x57\x41\x97\x44\xc4\xda\xdd\x32\x43\x73\xc9\x2e\x88\x10\x2c\x13\xd8\x30\xae\x39\xbd\x19\xab\x5e\xa8\x89\x56\xb0\xd2\x73\xc2\xd2\x77\xd1\xa8\x5a\xa4\x2f\xc3\xa1\x14\x1e\x9b\xcc\x84\x67\x78\x9e\x21\xbb\x9f\xb3\x34\xe9\x2e\x2c\x3c\x76\x75\xae\x4b\xeb\x0e\x83\x3d\x42\x8a\x82\xf7\x59\xf8\x19\x78\x15\xcc\xd8\x75\x93\x47\xe8\x3d\x0c\xdd\x9f\x52\xe7\xfb\x1c\x52\xfd\xb8\xd7\x53\xb5\xab\x83\x07\x3d\x93\x3f\x81\x71\x3e\x98\xe1\xe7\xe7\xf0\x03\xa1\xa1\x8a\xcf\x4e\xb2\x4c\xf3\x29\xfe\x66\x6c\x36\x86\x0c\x85\xac\xe8\x0f\x96\xb1\x34\xfb\x7d\xce\x60\x57\x68\x3c\xf6\xf6\xad\xde\xec\x75\xdd\xec\x54\x6c\x9f\xfb\x16\x29\xd2\x46\x8a\x8e\xf0\x1c\x5d\x9b\x69\x9a\x0b\x5e\x98\x8c\xad\x98\x26\x02\xd7\xe9\xe5\x44\xa0\x01\xa7\x24\xfb\x03\xaf\xba\x9f\x5b\x3e\x6a\xed\xad\x28\xf9\xe1\xeb\x29\x74\x15\xe0\xd7\x50\x5b\xdf\x04\x2b\x72\xd1\x27\x30\x21\x37\x6b\xde\xcb\x88\x02\x9a\x9f\xc8\x87\x38\x3b\x33\x76\x73\x63\x51\xfe\xb2\x48\x8d\x82\x6c\x10\x47\x47\x9c\xcc\x7e\xa8\xf1\xf0\x17\xda\x01\x98\x1e\xde\x36\xfa\x74\x90\x54\x64\x71\x34\xca\xe7\x25\xab\x7f\x7b\x39\xcd\x56\xeb\x95\x54\x0e\x50\x8c\x86\xe9\xb4\x1c\x31\x79\x44\x47\x7d\xfe\xff\x97\x47\x7e\x81\x61\x54\xc0\xd9\x2b\x92\x10\x56\x6b\x89\xaa\xa4\xf0\x49\xde\x95\x64\xc5\x36\x7e\x4a\xa3\xf6\x36\xb9\x26\x4f\xbd\x85\xb5\xc3\xa6\x2b\x8b\xeb\xc6\xad\x66\xde\xf6\xa5\x48\x46\x53\x8b\x59\x56\x46\x74\x1f\x46\x7b\xad\x16\xdb\x6e\xa4\x59\x4c\xab\x34\xd1\xf7\x0f\x34\xcd\x1e\x74\xf4\x75\x34\x1f\xed\x8c\x14\x78\x87\x8b\xa1\x4f\xd0\x66\xef\x22\x79\xc6\xbf\xa1\xfe\x24\x59\x60\x58\x22\x52\x4d\x06\x91\x93\xf3\x8a\x71\xa9\x25\x45\xed\x24\xcb\x66\xd5\x5c\x5c\x9a\xd1\x4c\xb0\xaa\x2a\xd6\xbd\x96\xd4\xc1\x29\x6c\x7b\x99\x87\x4b\xe8\xa4\x17\x26\x3d\xd3\x75\x46\xb1\xcb\xbe\xc9\x99\xb7\x96\x3d\xdb\xb6\x14\xd6\xc0\x94\x63\x5e\x8e\x3a\x2d\x21\x3f\x02\xfd\x88\x1a\x9d\x58\xeb\x2c\x8f\x6f\x33\xcc\x4c\xa3\x2a\x6b\xdc\x33\xeb\x20\x6f\x8e\xac\x7b\xaf\xd7\x31\x1f\xe0\xe1\x42\x4e\x33\xac\x27\xbd\x7e\x73\xe4\x4c\x2b\x09\xa5\xff\x24\x39\x56\x5b\xe8\xa1\x0f\x38\xce\xaa\xc5\x70\x81\x93\xa5\xfb\x1a\x20\x86\xd6\xd7\x0b\xf0\x2e\x0b\x92\x4d\xf9\x63\xb4\xad\xac\x11\xd3\xf4\x1d\x2f\xb9\xfe\xec\xe4\xcc\xe5\x3c\x5c\x37\x13\x99\x67\x74\x3d\xbc\xb2\xaa\x5b\x6d\xe1\x5d\x5d\xd7\x77\x69\x49\x2b\xf6\x8b\x0a\xf9\xa1\xca\x9a\x21\xb8\xd7\xd6\xf7\xcf\xf9\x22\x78\x18\x9d\x53\x1a\x22\x61\xcd\x0f\x38\xf7\x13\xee\x1d\x3d\xaa\x6d\xb5\x4f\x92\x02\xba\x8e\x2f\x50\xcf\x35\x1d\x32\x97\xad\x4f\x62\x3a\x84\xe7\x76\xcd\xdc\x36\x58\x01\x20\xc1\x3b\x70\xd6\x90\x3e\x05\x57\xd2\x3a\x9c\x5d\x3c\x0e\x1d\x3d\x3d\x22\xe9\xf5\x0f\xe4\xeb\xc7\xd1\xd0\x64\x72\x1e\x98\xf6\xc3\x75\xd4\xa2\xa5\x56\xee\x9e\x43\x4f\xc1\x8d\x80\x03\xc3\xfe\x9d\xa8\xf9\xf8\x27\x0f\x6f\xcb\x00\x17\xff\xe5\x3a\x0c\xdf\xb4\xff\x69\x1d\x3a\x5f\x6e\xdc\xee\x9c\xa7\xc6\x73\xe7\x6f\x87\x84\x2c\x53\x3c\x01\xec\xb5\x64\xc5\x3a\xda\x04\xf5\xaf\xf7\x6e\xcb\x4e\x3c\xe3\xef\xc1\xac\x02\x62\xad\xe1\xe4\x4c\x22\xa7\x0a\xa5\x52\x6d\xe8\x3f\xf0\xc8\xd6\x81\xe8\x74\x39\xc5\x80\x9c\x5d\xf9\x58\xb0\x0f\x5a\x94\x31\x45\xab\xcb\x87\x98\x8e\x25\x4d\xc7\x33\xa0\xdd\x1f\x03\x70\xa7\xa6\x87\x18\x10\xec\xe1\x31\xa0\xcd\xd6\xd2\x63\xa8\xcb\x42\xef\xcf\x46\x02\x2d\x9f\x81\x5a\xc9\xd8\x20\x93\x58\xbb\x69\x2f\x17\xf5\x2f\xf7\x34\x92\x2a\x58\x50\x69\x2b\xc7\x3e\xb6\x90\x62\x54\x34\xda\x32\xc4\x03\xa5\xc1\x6e\x91\x39\x15\x71\x75\x32\x71\x27\x1f\x24\x03\xef\x9d\x82\xb3\x75\x92\x24\xac\x2a\x03\xeb\x19\x55\xe7\x6d\x6a\x79\xf0\x6e\xae\xf8\x02\x8b\xf7\xcc\xa6\x5f\xf3\x41\xa7\x55\x3e\x4e\x2f\x8e\x55\x88\x09\x97\xca\xdd\x9e\xc9\x16\xf5\xef\xd4\x2b\xd9\xda\x02\xe9\x34\xa1\xe9\x7e\x44\x37\xfd\x75\xba\x13\x6d\x6f\xe7\x74\x9c\x6d\x6f\xa0\xb4\x9b\x27\xdd\x7d\x8c\x56\x4a\x1f\xbb\xe1\x84\x3a\x7d\x95\xae\x1f\xb6\x73\xea\x83\xd0\xcf\x37\xe1\xc2\xa5\xd1\x99\xe8\x3d\x68\xf9\x2d\x95\xe1\x76\x4a\x2b\xa5\xb1\x7d\xb2\xa9\x6f\xbf\x2f\x73\x4b\x87\xeb\xd3\x37\xaf\xb6\x2a\x99\x8f\x62\x91\xe0\xb3\x9e\xfd\xdb\x26\xc1\x17\x2f\x4c\xb7\xf8\xa7\x70\x9c\x6f\x99\x23\x7c\x02\x2e\x15\x0c\xa0\xec\xa1\x26\xf8\x54\xd0\xbd\xda\xd8\x5d\xeb\x97\xb4\x5a\xec\xb0\x56\xf2\xaa\x93\x79\x20\x39\xa9\xab\x05\x29\xd3\xef\x38\xf8\xd8\xe5\xcd\xba\x09\x48\xd5\x68\x44\x0d\xca\xf5\xa7\xc0\x32\x6e\xde\x70\xd0\x36\xaa\x47\xd4\x4f\x37\xdd\x2e\xd9\xec\x6c\x60\xb1\x76\x5b\xb2\xd8\x6f\xc2\xb7\x2e\xee\x4b\xa7\xa4\x2c\x98\x05\x7b\xbb\xe5\x20\x1a\xad\xe2\x79\x33\xc6\x7f\x31\x06\x87\x64\xb5\x8a\xf3\xa9\x40\x19\x77\xcc\xbd\xb2\x9a\x2d\xff\x26\x8a\x0a\x0d\xd0\x88\x74\xaf\x5a\x20\x47\xb7\xfb\xd9\x9a\x47\xab\xf0\x5f\xb8\xd1\x65\xea\x25\x5e\xf7\xd0\x0b\xb1\xaf\x68\xe0\xbb\x83\x34\xda\x7a\x29\x61\x6f\xb8\x40\x26\x9f\xbb\x14\x93\x72\xce\xc6\xec\x00\xb5\xd0\x5b\xfb\x1e\xe7\x69\xbe\xfc\x12\x97\x74\xeb\x2e\x9d\xeb\x47\x1f\x47\x97\x67\x93\xd1\x24\x0a\xb7\x8d\x35\x2e\xe8\xfc\xd3\xfb\x5f\xdf\x8f\x3f\x7d\xbe\x8a\x5a\x1a\xc5\xb4\xb3\x1a\x7f\x1a\x9e\x4d\x26\xae\x16\x35\x22\x63\xae\x90\x64\xe0\x81\x4c\x7f\xa6\xdf\x20\x2e\x58\xc4\x65\xef\x46\x92\xc8\x3d\x5f\xdf\x4c\x4d\x3d\x71\x09\xd6\x50\x0b\xd2\x95\x77\x49\x39\x48\x8b\x81\xdd\x66\x9a\x2f\x24\x36\xfb\x5e\xc3\x57\xf7\xb3\x4a\xf8\x0d\x29\x88\xdb\xef\xfd\x86\x8c\xdd\xd2\x16\xbf\x7d\x41\x07\x27\x13\x98\xed\x29\x49\xf6\x2a\x99\x66\x78\xce\x5f\xf9\xf8\x5e\xfa\x8b\xdc\x4c\xc0\xf0\xd6\xe5\xc0\xbb\xb4\x61\x73\xb3\x67\xd8\xef\xcc\xb5\x11\xcc\xe4\xf5\x60\x20\x9b\xda\x25\x6b\xa7\x38\xc3\x2c\xf8\x34\xc9\x0b\x70\xc0\xa4\xd0\x01\x71\x12\x96\xac\x31\x81\x95\x22\xe1\x74\x9f\x67\xa3\xeb\x78\xee\x44\x62\xd5\x12\x16\xd1\x35\x84\x8d\x15\x43\x6c\x0a\xe2\xa9\x3e\x7a\xeb\x1d\xb5\xa1\x67\x7f\x05\xa6\xd7\x8a\x3e\x4d\x50\x1c\xf2\xc5\x86\xd4\xfe\x1d\x00\x00\xff\xff\xdb\x3e\xd3\x9d\x94\x3a\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 14996, mode: os.FileMode(420), modTime: time.Unix(1456330709, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x6d\x6f\xda\x3a\x14\xfe\xce\xaf\xb0\xfc\xe9\x5e\x89\xcb\xa5\x54\xaa\xb4\x68\x9a\x44\x81\x56\x91\xd6\x0e\x15\xd6\x49\x9b\xfa\xc1\x24\x07\x64\xcd\xd8\x9e\xed\x74\xa2\x15\xff\x7d\xc7\x21\x09\x31\x09\xf4\x45\x5a\x5f\x50\xc8\x39\xcf\x39\xcf\x79\xb5\x9f\x9f\x49\x0a\x4b\x2e\x81\x50\x0b\xe6\x91\x27\x40\xc9\x76\xdb\x21\xe4\x19\xff\x09\xa1\xc3\x6f\xb3\x39\xac\xb5\x60\x0e\xae\x94\x59\x33\x77\x0f\xc6\x72\x25\x29\x89\x08\x1d\xf4\xcf\xfa\xff\xf5\x3f\xe0\x1f\xed\xee\xd4\xa7\xcc\xb0\x35\x38\xd4\xa1\x51\x61\xc2\x1b\x11\x42\x25\x68\x21\x9d\x39\x65\xd8\x0a\x6a\x32\x94\xce\x37\x1a\x72\x73\xb7\xd9\x7a\x01\xa6\x30\x95\x8b\xc6\xb0\x64\x99\x70\xb9\xf4\xac\x1f\x4a\x6c\x62\xb8\x76\x25\x95\xca\x05\xb1\x3b\x1f\xc4\xf2\x27\x20\xff\x5c\x5f\xfe\x4b\x0b\xd4\xb6\x84\xd3\x31\x73\x6c\xc1\xec\x31\x1e\x33\x67\xb8\x5c\x1d\xe3\xc1\xb4\x3e\x45\xa4\x50\x25\x69\xe1\x83\x48\x4c\x48\x93\x42\x2c\xad\x63\x32\x81\xdc\xe9\x7b\x68\xa4\x8b\x9e\x1b\xf4\xd6\x3c\x31\xea\x14\x9d\xd2\x0f\x49\x04\xb3\x96\x2c\x95\xa9\x31\x53\x29\xd8\x26\xb5\x1b\x74\xc1\x87\xdf\xdf\xc5\x6a\xc9\x04\xa6\xf5\x04\x9f\xdc\xb8\x16\x40\xd8\x23\xe3\x82\x2d\xb8\xe0\x6e\x43\x9e\x94\x6c\xc9\xd1\x14\x19\xff\x56\x26\x7d\x03\x93\xd0\xd9\x0c\x3b\x1a\x0c\xd1\xa5\x9d\x86\x87\x59\xb6\x90\xe0\x6c\x8b\x03\x44\x7f\xe6\xd6\x7d\xc4\xfe\x8f\xa2\xc9\x68\x10\x45\x3b\xdd\x28\x8a\xd3\x4f\xc7\x7c\x22\xe8\x7e\x3a\x22\xb6\xb0\xda\x70\xf7\x15\x47\x2c\x6f\x87\xbf\xd0\x77\x45\xac\x59\xe9\xa2\xe1\xfc\x5e\x27\xed\x71\xee\x43\x44\xf2\x3e\xbe\xd3\xe1\x55\x96\x3b\x35\xfb\xf4\x4b\xe6\x74\x16\x64\x92\x4e\x95\x71\xe7\xe7\xfd\x8b\x79\xa2\x87\x69\x6a\xbc\x08\x0d\x30\x91\xc1\xee\xf1\x4a\x46\xd1\x35\xb8\xa1\x73\xf8\xfd\xc7\xbe\x55\x69\x97\xd0\x89\x4c\xb5\xe2\xd2\xf5\x3c\x12\xac\xa5\xe4\x81\x6c\xeb\xad\xb1\xb7\xed\x1f\xdf\x67\x3b\x47\x1e\x18\x9e\xc8\xc7\x9b\x8d\xfd\x25\xea\x2b\x22\xb0\x7c\x07\x4b\x9f\x88\x4a\xde\x8a\xae\x77\x6e\x1b\xba\x92\xb7\xa2\xeb\x6d\xd2\x86\xae\xe4\x1e\x1d\x54\xe1\x0e\xac\xca\x4c\x02\x41\x1d\x66\x90\x64\x06\xa7\xec\xda\xa8\x4c\xbf\xd4\x02\xa1\x72\xad\x11\xa6\x46\x69\x30\x8e\x43\x38\x2d\x28\xc9\x55\x0f\xfa\x64\xed\xe3\x20\xe5\x89\xd2\xad\xab\x07\x1e\x62\xb9\xca\xcb\x8b\x45\xaa\xe9\x10\x1f\x6c\xac\xd1\xa5\x53\x89\x12\xde\xa0\x4b\xb4\xaf\xdd\x95\x51\xeb\xa2\xe0\xd4\xd7\xdf\xbf\x9b\xab\xc3\x37\x23\x9e\x9a\xd8\x87\x8a\x87\x46\x2f\xff\xfd\xff\xec\x82\x16\xb9\xda\xfd\x3c\x04\x9c\x70\x36\xe2\x34\xc8\xb1\x9f\x96\x1a\x60\x7b\x64\x75\xbc\x94\xd3\xbb\x31\x7e\x8c\x2f\xeb\xca\xaf\xca\x69\x00\x79\x43\x6e\x73\x50\x9c\xda\x20\x96\x72\xcb\x9d\x8c\xa7\x9a\x90\x17\x83\xd9\xcf\xd2\x6b\x22\x69\x3b\xfb\x2b\x66\x0d\xe1\x9e\x50\x91\x86\xd2\xd9\xc8\x1f\x5f\x01\x36\x38\x41\x8f\xe2\xe2\x14\xa4\xe3\x4b\x0e\x26\x74\xec\xe3\x99\x39\x96\xfc\xbc\xdd\x0d\xd2\x01\xfc\xb6\x1a\xbf\xe6\xbc\x77\x8f\x16\xaa\x81\xaa\xd7\xfd\x00\x38\x91\x2b\xbc\x75\x55\xf5\x0c\xeb\x78\xc3\x2c\xde\xa1\xc2\x3d\xd0\x1c\xfe\x23\x90\x70\xf9\x34\x37\x4e\x08\xdb\x1f\xf6\x95\x6e\xf9\xee\x40\x35\x9c\xb2\x40\x92\x2d\x04\x4f\xc4\x66\x98\xe0\xea\xb1\x7c\x21\xf2\xb8\x0e\xef\x02\xbe\x3f\x77\x65\x2e\xbb\x6a\xa5\x07\xa1\x1c\x8f\x97\x60\x3d\xe4\x8b\xa1\x9e\xcf\x60\x3b\xe1\xfa\x7b\x68\x76\x74\xa7\xfc\xdc\x76\xf0\x72\x0b\x32\xf5\xf7\xd9\x3f\x01\x00\x00\xff\xff\x44\x3a\xa6\x8e\xe7\x0a\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 2791, mode: os.FileMode(420), modTime: time.Unix(1455565419, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x7f\x6b\x1b\x39\x10\xfd\xbf\x9f\x42\x88\x42\xa1\x38\x4e\x9c\x50\x8e\x13\xdc\x1f\xbe\x34\x69\x7d\x75\x12\xb3\x4e\x7b\x70\x25\x1c\xca\xee\xd8\xd1\x79\x2d\x2d\x92\x36\x4d\x1a\xfc\xdd\x6f\x24\xed\x7a\x7f\xc6\x0e\x81\xe3\xa0\x6e\x58\xe9\x69\x34\x7a\x33\xf3\x66\x9e\x9e\x48\x02\x0b\x21\x81\x50\x03\xfa\x5e\xc4\x40\xc9\x66\xf3\x86\x90\x27\xfc\x11\x42\xc7\x7f\xce\xaf\x61\x9d\xa5\xdc\xc2\xb9\xd2\x6b\x6e\xbf\x81\x36\x42\x49\x4a\x18\xa1\xc7\x47\xa3\xa3\x83\xa3\x5f\xf1\x1f\x1d\x04\xf8\x8c\x6b\xbe\x06\x8b\x18\xca\x0a\x13\xb8\xfa\x55\xa7\xb5\x4f\x5c\xb8\x7e\xcc\xc0\x5b\x98\x5b\x2d\xe4\xb2\x38\xed\xb7\x3e\x82\x89\xb5\xc8\x6c\x79\xc7\x8c\x67\xa0\xad\xe6\x22\x25\x5f\xa3\xe9\x80\xc0\x70\x39\x24\xef\x52\xb5\x34\xa3\x61\xb6\xdd\xe3\x59\x36\x8c\xd5\x9a\x8d\x46\xc7\x27\x1f\xde\xd1\xc2\xdc\xc6\xff\xdd\x14\xbe\x45\x60\x54\xae\x63\x68\xb8\x36\xe5\xeb\xdb\x84\x9f\x3d\x40\x9c\xbb\x2b\x23\x95\x42\x8f\xab\xcc\x13\xc1\xd8\x64\x7c\xc1\x98\xc7\xd4\x3c\x9e\x69\xe5\xdc\x10\x0d\xc3\x81\x3c\x63\xf2\x35\x38\xfc\x4c\xa5\x22\x7e\xfc\xa8\x62\xfc\x96\xb6\x85\x43\x64\xc9\x6a\x20\xf5\xf8\x00\x79\x1d\xfd\x52\xbb\xc4\x83\xe6\x16\xa3\x50\x9c\xff\xde\xd8\x22\x2d\x7b\x1e\x7e\xb6\x58\x40\x6c\xbd\xef\x69\xaa\x7e\xb4\xac\x15\xae\x0b\x19\x8b\x8c\xfb\xf0\xe0\x05\x45\x06\xa0\x79\x42\x53\xcf\xcc\x90\xaf\xf9\x4f\x25\xf9\x0f\xe3\xf8\xa5\xe4\xa6\xa4\xb3\x61\x67\x1c\xdb\xe0\x3d\x9e\x33\xd6\xb0\xea\xe1\x78\xa2\x05\xdf\x34\xbe\xeb\xbb\x0d\xcb\x18\x78\x7b\xe7\x9c\x3f\xa4\xcd\x65\xc7\x64\xe0\xba\xc9\x41\x9b\x81\x80\x7c\xbc\xc4\x7c\x74\x66\x42\xa0\x4f\x53\x95\x27\x21\x91\xd1\xe1\x2f\x98\xf7\x46\x98\x0e\x33\x74\x4f\xb8\x3c\xe6\x25\x21\xf3\xc0\x5d\x61\xeb\x73\xbc\x38\xb6\x3f\x7c\x1e\x56\x51\xdf\xbb\x4f\xca\x40\xb2\x89\xbc\x57\x2b\x38\xcf\x65\x38\xd0\x8b\xbe\x79\xe6\x92\xb2\x74\x76\x5d\xf3\xfe\x19\x93\x3d\xab\x3d\x29\xf4\xdf\xd3\xb0\x0a\xc1\x66\x9f\xc0\x46\x10\x2b\x9d\x74\xe3\xde\x87\x9d\xdf\x71\x9d\x4c\x50\xd1\xb8\x55\x7a\xff\x89\x20\x5f\xb7\x80\xc2\x06\x7c\xbd\x1f\x3f\x15\xc6\x06\xec\x0e\x77\x9c\xda\xb1\x53\x04\x59\x98\xaa\xe5\x27\xad\xf2\xec\xa5\xe0\x7d\x7e\x78\xf4\x2c\xb7\x08\x3d\xbb\xc7\x1c\x35\xaf\x4e\x8c\xfe\x04\xf8\x5f\x42\x1d\xbb\x2a\x5f\x94\x55\x5e\x8b\x09\x8f\x57\xaf\x7f\x20\x0a\xe4\xb9\x64\xec\x0f\x25\x0a\xa5\xa3\x03\xf7\x3f\xd7\x92\xa1\x3c\xb2\xd6\xa5\xb8\xf9\xe4\x8e\x2f\xb6\xcd\x23\x82\xa5\x6f\x6a\x9b\x01\xa1\x3d\xdb\xe3\x38\x56\xb9\xb4\x93\xa4\x40\x18\xe7\xed\xa1\xc3\x79\x18\x29\x71\xfe\x15\x5e\xd5\x1c\xec\xf0\xbd\xd3\xe4\x9b\x96\xaa\x16\xdc\x77\xd6\x76\x6b\x71\xfd\xab\x42\x96\xab\xdb\x48\xe2\xc8\xa0\xb9\x5c\x02\x79\xbb\x1a\x90\xb7\xf7\x84\xfd\x46\x86\xe3\xe8\xd2\x84\xb9\xa1\xe0\x0d\x41\x79\x86\x6d\x11\x41\xb8\x7e\x81\xfd\xd9\xf5\xf9\x56\x7f\xdc\x8e\x01\xfe\x61\x41\xa1\x19\xf3\x79\x38\xf7\xac\x97\xe7\x9a\x1d\xa0\xea\xb7\xa4\xd3\x48\xcf\x24\xbf\x4d\x21\x71\x3b\x56\xe7\xd0\xea\xa0\x35\xd3\x63\x1d\xe6\x0b\x74\x14\xdf\xb0\xd9\xb4\x9b\x6d\x29\x94\x9e\x69\xb2\x8d\x3e\x2a\xc2\xd8\x5a\xb7\xf0\xbd\x36\x9a\x60\xf5\x2c\x01\xd5\x01\x5f\x82\x66\x3b\x3d\xd2\xb5\x00\x74\x58\x2e\x67\xca\x88\xed\x64\x73\x1d\x4d\x2e\xfe\xfe\x7c\x15\x4d\xfe\xba\xba\xac\x27\x65\xc5\x62\x9d\x72\x90\x49\x45\x70\xf7\xea\xe7\x67\x96\x92\xd6\xad\xf2\xbf\x68\x74\xf9\xcc\x65\x92\x7a\xbb\x54\xc8\x04\x1e\x86\x77\xc5\x42\x23\x14\xe5\xb8\xd4\xe5\xa6\x6f\xae\xea\xa7\x87\x9e\xaa\x04\xba\x13\xd1\xfc\xe4\xf7\x3c\x5e\x81\xed\x2b\xbc\x83\x50\x79\xb1\xc2\x96\xf6\xb0\xa3\xd0\x42\x65\xb4\x63\x71\xf2\x05\x1e\x1d\x36\xf4\xc5\xc3\x6a\x88\x1c\xfe\x14\x19\x7d\x76\x1e\x89\xb0\x38\x45\x98\x25\x24\x7a\xfc\x4f\x53\xaf\xe9\x35\xee\xa9\xdc\xab\xd7\xf1\x07\xda\xad\x9e\xc6\x28\x7a\x95\xdb\x2c\xb7\x75\xd2\x5f\x51\x54\x53\x21\x57\xed\xb0\x7d\xe3\x69\xee\x5d\xdc\xa6\xf5\x0b\x92\xa9\x33\x9e\x97\x56\x2a\x5e\x1d\xa4\xfd\x96\x37\xee\x57\x19\xfb\x37\x00\x00\xff\xff\xcd\x2b\x5b\x59\x4a\x0c\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x57\x6d\x4f\x23\x37\x10\xfe\xce\xaf\xb0\xfc\xe5\x5a\x29\xcd\x05\x7a\x54\xba\xa8\xaa\x14\x12\x40\x2b\x15\x1a\x11\x4a\xa5\x56\xa8\x72\x76\x27\x91\x75\xbb\xf6\xd6\xf6\xd2\xcb\xa1\xfd\xef\x37\xde\x77\x7b\x37\x09\x24\x40\xb4\xec\xbc\x3d\x33\x9e\x79\x6c\xbf\xbe\x92\x08\x36\x5c\x00\xa1\x1a\xd4\x0b\x0f\x81\x92\x3c\x3f\x23\xe4\x15\xff\x08\xa1\xb3\xbf\x56\x8f\x90\xa4\x31\x33\x70\x23\x55\xc2\xcc\x13\x28\xcd\xa5\xa0\x64\x4a\xe8\xc5\xe4\x7c\xf2\xd3\xe4\x33\xfe\xd2\x51\xa9\x3e\x97\x22\xe2\x06\xe5\x9a\x4e\x2b\x17\xf8\xf6\x2a\x66\xe2\xcb\x1d\xfb\x8a\x52\x01\x61\x23\x26\xf4\x46\x4c\xa7\xd7\xff\x65\x2c\xb6\xff\xff\x63\xdf\x3c\xc0\x06\x1f\xa9\xa7\x4c\xf2\x11\xa1\x94\x3c\x93\xbc\x70\x99\x57\xd1\x96\x4c\xb1\x04\x0c\x22\xea\x46\x9b\xc5\xb1\x0c\x11\x6f\xb4\x32\x52\xb1\x2d\x74\x64\x28\x7d\xdc\xa5\x50\x80\xbf\xcf\x92\x35\xa8\x0a\x78\x21\x5a\xc0\x86\x65\xb1\x29\xa4\xe7\x13\x57\xa2\x43\xc5\x53\x53\x27\xde\x84\x20\xba\x8c\x41\x34\xff\x06\xe4\x87\xdb\xab\x1f\x69\x65\x95\xd7\xe6\x74\xc1\x0c\x5b\x33\xbd\x0f\xc7\xca\x28\x2e\xb6\xfb\x70\xb0\x34\x3d\x04\xa4\x52\x25\x51\x15\x83\x08\x2c\x48\x1f\x42\x20\xb4\x61\x22\x84\x22\xe8\x29\x30\xa2\xf5\xd8\x5c\x8c\x13\x1e\x2a\x79\x08\x4e\x1d\x87\x84\x31\xd3\x9a\x6c\xa4\xea\x20\x93\x11\xe8\x3e\xb4\x7e\x5b\xbc\x1b\xdc\x21\x44\x4d\x8b\xdc\x2a\x99\xa5\x24\x61\x5f\xff\x0d\xdb\x70\xe4\x85\xc5\x19\x8c\x08\x1f\xc3\x98\x7c\x78\x5d\x5c\xd5\x09\xcc\x2d\xfe\x3b\x48\xa4\xda\x7d\x3c\xbf\x9c\x14\x9f\xfc\xc3\x00\x7a\xc4\xc0\x67\x7f\x9f\x04\x7b\x83\x6d\x0f\x87\xb0\x17\xce\xd3\x18\x08\x7b\x61\x3c\x66\x6b\x1e\x73\xb3\x23\xdf\xa4\x18\x58\xe1\x25\xe2\xfd\x5f\xaa\xe8\x1d\x48\xdc\x60\x2b\x9c\x7e\x50\x24\xad\xfd\xf4\x22\xac\xb2\xb5\x00\x33\xb4\x42\x68\xfd\x3b\xd7\xe6\x57\xe4\x0a\x1c\xe7\xf9\xc5\x74\x5a\xea\x4e\xa7\x41\xf4\xdb\xbe\x98\x68\xf4\xb4\x9c\x13\x5d\x79\xed\x85\xfb\x13\xe9\xa8\x68\xe6\x53\x4a\x9b\x4a\x6d\xb6\x0a\xdb\xed\x78\xc2\x59\x1d\xa7\x87\xe0\x29\x0d\x87\x93\x6d\xf3\xc4\x0c\x6c\x92\x87\x73\x6c\x3c\x3b\xdc\xf5\x47\x66\xd2\xcc\x29\x27\x5d\x4a\x65\x2e\x3f\xfd\x7c\xf1\x18\xa6\xb3\x28\x52\x25\x45\x3e\xd9\x0e\x6d\xd9\xf2\x16\xcc\xcc\x98\x82\x2d\x9b\x69\xa3\x48\x8e\xd7\x22\x4a\x25\x17\x66\x6c\x2d\x41\xeb\x82\x2c\xbb\xfd\xd1\xfa\xb6\x8f\xa7\xf9\x2e\x2c\x3d\xc7\xd7\xe2\x65\x59\x55\xbb\x4b\x74\x8e\xf3\x8a\xd4\x1b\xf9\x3e\x07\xdd\x26\x1e\x72\xd0\xc8\xf7\x39\xe8\x36\xcd\x90\x83\x46\x6e\x1d\x38\xcb\xf1\x00\x5a\x66\x2a\x04\x67\x41\x56\x10\x66\x0a\x67\xae\xe0\x8e\x63\xbd\xe0\x2a\x77\x3a\x62\xa9\x64\x0a\xca\x70\x70\x67\x07\x25\x85\xaa\xd7\x30\x75\xeb\x92\x7a\x3b\x1e\x75\x2d\x9c\x20\x81\xd8\x16\x4b\x8d\x0b\xd6\xd1\x21\x36\xdf\x20\xc5\xa8\x46\x86\x32\xb6\x3e\x4d\x98\xda\x75\xbc\x51\x32\xa9\x16\x9f\xda\x5e\xb0\xef\x1e\xa5\xff\x66\xce\x23\x15\xd8\x6c\x71\x0f\x1c\x17\x3f\x1f\xcf\x7f\xa1\x55\xb9\xca\xcf\xb3\x83\x09\xe7\x24\x88\x9c\x32\xdb\xc9\xe9\x18\xe4\x7b\xb8\xe4\x58\x59\x1f\x16\xf8\xb5\xb8\xea\x2a\xbf\xa9\xac\x8e\xc9\xfb\xca\x5b\xd8\x05\x91\x76\xd2\xa9\x99\xef\x60\x4a\xcd\xc0\x1c\xcd\xa7\x1d\xad\xb7\x24\x33\x74\x9a\x69\x90\xf5\x84\x2d\xa0\xaa\x12\xce\x86\xe6\xd8\x3a\x67\x82\xbd\x76\x41\x04\xc2\xf0\x0d\x07\xe5\x06\xb6\xf9\xac\x0c\x0b\xbf\xdc\x97\xe3\xe4\x99\xdf\x37\x43\xd8\x9f\x7d\x4f\xd5\xdd\xa1\x7b\x86\xae\xb8\x6f\xde\x59\xea\x9e\x6d\xb7\x73\x3c\xc3\x6b\xb1\xc5\x43\x2f\x1d\xde\x2b\x1a\x79\x7d\xd8\x45\xb5\xcf\xe3\x4f\xe3\x4b\x57\xe7\x8e\x69\xc4\xe5\x72\x4e\x9f\x68\xf6\x98\xb8\x5c\xd7\x27\x38\xd7\xac\x3d\x66\xb4\x47\xe4\xea\x9d\xa7\xea\x8e\xb3\x23\xc9\xd6\x31\x0f\xe3\xdd\x2c\x44\x9a\xd3\x7c\x1d\x17\xe9\xfb\xa7\x10\x3b\x05\x65\x33\xd5\xbd\xbb\x4d\x3d\x47\xb8\xa7\x39\x3c\xe4\x1f\xde\x5d\x26\x44\xaa\x7d\x3e\x30\x37\xde\xfa\x1e\x9d\x1e\x4f\x7f\x78\x86\x88\xcf\x08\xee\xde\x7f\xbc\x2d\x6f\x58\xc2\xe3\x9d\x73\x96\xc0\x06\xf0\xea\xd9\xde\x3e\xbc\x78\x28\xf4\x0e\x9a\xed\x26\x1b\x6c\xca\x0d\x76\xe8\x4e\x34\xf2\x27\xec\x5e\x96\x7b\x98\xbd\xff\x1c\xb8\x1c\x35\x17\x23\xb7\xc8\x9d\x72\x9f\xd5\xdf\xf9\x19\xde\xf8\x40\x44\xf6\x92\xf7\x3d\x00\x00\xff\xff\xc2\xa2\x9e\x97\xfc\x0d\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 3580, mode: os.FileMode(420), modTime: time.Unix(1457141724, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xda\x3e\x10\x7e\xe7\xaf\xb0\xfc\xf4\xfb\x49\x8c\x41\x27\x75\x6a\x34\x4d\x42\x0c\xaa\x48\x5b\x87\x80\x76\x0f\x55\x1f\x8c\x7d\x50\x6b\x89\x1d\xd9\x4e\xb7\xaa\xe2\x7f\xdf\xd9\x09\x10\x27\x1d\x6d\xa5\xb5\x80\x22\xdf\xdd\xf7\xdd\x7d\x77\xb6\xf3\xf4\x44\x04\x6c\xa4\x02\x42\x2d\x98\x07\xc9\x81\x92\xdd\xae\x47\xc8\x13\x7e\x09\xa1\xe3\x1f\xcb\x15\xe4\x45\xc6\x1c\xcc\xb4\xc9\x99\xbb\x01\x63\xa5\x56\x94\x24\x84\x9e\x0d\x47\xc3\x77\xc3\x0b\xfc\xd0\x7e\xe5\x3e\x67\x86\xe5\xe0\xd0\x87\x26\x35\x04\xae\x7e\x61\x8e\xad\x99\x85\xc6\x1a\xae\xae\x1e\x0b\x08\x30\x4b\x67\xa4\xda\xd6\x10\x55\x00\x6c\x58\x99\xb9\x60\x1d\xc6\x06\xcb\x8d\x2c\xdc\x3e\x83\xda\x91\x88\x9a\x81\x48\x25\xe0\x37\xad\x03\x76\xfb\x48\x9a\x2a\xeb\x98\xe2\x10\x38\xbb\x59\x9c\x4c\x02\x8d\x9c\xf1\x7b\x18\xb8\xb3\x41\x2e\xb9\xd1\x7f\x4b\x08\x1d\x57\xf7\x40\x1c\x22\x12\xbd\xc1\x54\x2a\x4e\xe2\x34\x29\xb1\xf8\x4e\x52\x73\x66\xed\x2f\x6d\xc4\x1b\x64\x89\xab\xbf\x56\x88\x2b\xc8\x7f\x48\xb0\x06\x62\x20\xd7\x0f\x20\xfe\xef\x12\x2d\xcb\xb5\x02\x67\x9f\x2f\xfc\xab\xb4\xee\x13\xb6\x39\x49\xa6\x93\xb3\x24\xa9\x7c\x93\x24\x15\x9f\x4f\xd4\x79\x33\x9f\x10\x5b\xa3\x76\xe8\x6e\x0a\xfe\x3c\xd5\x91\x05\xe3\x3d\xc5\x69\x86\x03\x72\xaf\x81\x4f\xbf\x97\xae\x28\xa3\x62\xe8\x5c\x1b\x77\xfe\xe1\xe3\xc5\x8a\x17\x63\x21\x8c\x37\x21\x00\xcb\x4a\xa8\x1e\x67\x2a\x49\x2e\xc1\x8d\x9d\x6f\xe6\x2d\xa1\x0b\x28\x32\xc9\x99\xa7\xba\x34\xba\x2c\x68\x1f\x31\x8c\xcc\x99\x79\x9c\x2a\x31\xd7\x52\xb9\x81\x07\x02\x6b\x29\xb9\x23\xbb\x66\xcf\x8e\x54\xfe\xf1\x9f\x50\x05\xa0\x16\xcf\x54\x3d\x2c\x40\x48\xdb\xdc\x3a\x11\xd1\x02\x36\x5e\xa6\x83\xdd\x47\x47\x3a\x2d\xc0\xea\xd2\x70\x88\x94\x5a\x02\x2f\x8d\x74\x8f\x55\x2e\x2f\x34\x29\x76\x6e\xb4\x6a\x6e\x74\x01\xc6\x49\x88\x47\x0a\x2d\xc1\xb5\xd5\x49\xe3\xeb\x20\xfb\xd3\xa5\xdf\x74\x8f\x18\x52\xb5\x0d\x8a\xa3\x6e\x0d\x1f\xe2\x8b\x4d\x0b\xa4\x74\x9a\xeb\xcc\x03\x3a\x1e\x64\x9c\x19\x9d\xd7\x3d\xa0\xbe\x25\x7e\x6d\xa5\xdb\x2b\x13\x29\x4c\xea\x4b\xa5\xa3\xe1\x20\xfc\xbf\x1f\x9d\xd3\x5a\xab\xea\xef\x2e\xca\x09\xa7\x37\x15\x91\xc6\x7e\x9e\x1b\x01\xbb\xce\xc0\x4f\xfc\xf1\x50\x6d\x9c\x17\x85\xcd\x98\x75\x32\x04\xec\xf7\xda\x1b\xe4\x6d\x29\xbb\xa8\x94\x0d\x28\x64\xdb\x82\x39\xec\xfb\x54\xd8\xa8\x9c\xfd\x69\x70\xb2\xa4\xce\xdc\xbe\xb2\xa4\xee\xbc\xbf\xa6\xae\x71\xe9\x34\xde\x2d\x92\xcf\x98\xcc\xf0\x10\x33\x53\xc5\xd6\x19\xf8\x36\x6c\x58\x66\xa1\xdf\x76\xfe\x26\x95\x36\xf5\x55\x74\x5d\x6c\x0d\x13\x3e\x1f\x67\xca\xd8\x35\x24\x75\xa5\xc5\xe1\xdc\x3f\x88\x10\x5d\x08\xc7\xba\x9f\x6d\xe7\x15\x5e\x69\x51\x70\xa7\xdf\x2d\x80\xa9\xda\xe2\x8d\x7a\x98\xfd\xb8\x29\x57\x65\x1e\xe2\x27\x59\x69\xeb\x8b\x92\x8e\x62\x97\x78\x86\x9b\x96\xb6\xbc\xf1\x40\x1c\x33\x0c\x8d\x59\x3a\xc6\x7f\x86\xe4\x5b\xf9\xc5\xdb\x2e\x8c\xc7\x6d\x73\x40\xa2\x7d\x8f\x07\xcb\x5d\x77\x50\x7a\xfb\xdf\x5d\x0f\x5f\x21\x40\x09\xff\xd6\xf0\x27\x00\x00\xff\xff\x64\xe5\x91\xd9\x4d\x08\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 2125, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x4d\x6f\xb2\x40\x10\xc7\xef\x7c\x8a\xcd\x5e\xbc\x28\xa0\xcf\x73\x29\x37\xd3\x97\x53\x63\x8d\xa0\x9e\x71\x19\x75\x23\x30\x9b\x65\x30\x6d\x88\xdf\xbd\xbb\x4b\x51\x48\xeb\xa5\x4d\x48\xc8\xce\xcb\x6f\x66\xfe\x33\x4d\xc3\x32\xd8\xcb\x12\x18\xaf\x40\x9f\xa5\x00\xce\x2e\x17\xaf\xf1\x18\xe3\xf3\x6d\x9c\x40\xa1\xf2\x94\xe0\x05\x75\x91\xd2\x06\x74\x25\xb1\xe4\x2c\x62\x7c\x16\x4e\xc3\x49\xf8\x60\x3e\x3e\xb6\xc1\xcb\x54\xa7\x05\x90\x89\xe0\x11\xb3\xe9\xc6\xb6\xd6\xf9\xf5\x61\x9e\xc9\x87\x02\x97\x1b\x93\x96\xe5\xc1\xe5\x39\xc7\x13\x54\x42\x4b\x45\x1d\x7b\x0b\xbb\x23\xe2\x89\xad\x57\xaf\x63\x06\xfe\xc1\x67\xa3\x23\x91\xaa\xa2\x20\x38\x68\x99\xf9\x02\xcb\x33\xbe\x9b\x5f\x11\xe8\x54\x9c\x26\x36\x38\x98\xce\xfe\xfd\x1f\x71\x87\xbc\xb4\x64\xfe\x58\x57\x84\x45\x82\x4a\x8a\x5f\xf5\x31\xa4\x2d\x90\xe4\x5e\x8a\xd4\xba\xff\xcc\xf4\xbe\xb8\x7c\x05\x15\xd6\x5a\x40\x4f\xb6\x7e\xa1\xea\xc7\x22\xed\x60\x51\x14\x2f\xe2\xb8\xde\xdd\x0a\x5c\xab\x76\x9b\x32\xb1\x53\x3f\xbc\xd9\x97\x1a\x15\x68\x92\xd0\xe7\x1a\x7b\xdc\xee\x3e\xc1\x13\xd8\xa4\xc6\xf6\xb5\xe7\xd1\x50\xc2\x4e\x89\xb6\x17\x6b\x9a\x6b\x37\xd4\x2d\xfc\xbb\x46\x83\x24\x53\x9e\x50\x60\xee\x86\xb0\x2b\xe5\x3d\xe7\x73\x99\x29\x94\x25\x0d\x89\xf6\x86\x9c\x5c\x9d\x6c\x7d\xf1\xde\x6a\x52\x35\xdd\xbf\xb8\x4d\x9a\xd7\xc0\xef\xe0\x1c\xc6\x33\xb7\xde\x30\x28\x33\x7b\xf5\x9f\x01\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 781, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{
		}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{
			}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{
			}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{
			}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{
			}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

